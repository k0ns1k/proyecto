name: Run tests

on: [push]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: proyecto
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Cache node dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Set node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Run yarn install
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Run yarn build
        uses: borales/actions-yarn@v4
        with:
          cmd: build

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, mysql
          coverage: pcov

      - name: Run composer install
        run: composer install -n --prefer-dist

      - name: Prepare Laravel Application
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          CMF_API_KEY: ${{ secrets.CMF_API_KEY }}
        run: |
          cp .env.ci .env
          php artisan key:generate
          php artisan migrate
          echo "CMF_API_KEY=$CMF_API_KEY" >> .env

      - name: Run tests
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: php artisan test --coverage --coverage-clover storage/coverage/coverage.xml

      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./storage/coverage/coverage.xml

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /var/www/proyecto
            git pull origin master
            composer install
            php artisan migrate --force
            yarn
            yarn build
            cd ../
            chown www-data:www-data proyecto -R
            supervisorctl restart all
